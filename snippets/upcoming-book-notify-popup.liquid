<div id="NotifyMeModal" class="modal-overlay" style="display: none;">
  <div class="modal-content">
    <button class="modal-close-button" aria-label="Close popup">&times;</button>
    <h3 class="modal-title">Notify Me for: <span id="modalBookTitle"></span></h3>
    <p class="modal-subtitle">Enter your details and we'll let you know when this book is available.</p>

    <form id="notifyMeForm" class="notify-me-form">
      <input type="hidden" name="book_title" id="formBookTitle">
      <input type="hidden" name="book_author" id="formBookAuthor">

      <div class="form-group">
        <label for="name">Name:</label>
        <input type="text" id="name" name="contact_name" required>
      </div>
      <div class="form-group">
        <label for="email">Email: *</label>
        <input type="email" id="email" name="contact_email" required>
      </div>
      <div class="form-group">
        <label for="whatsapp">WhatsApp Number (Optional):</label>
        <input type="tel" id="whatsapp" name="contact_whatsapp" placeholder="+1234567890">
      </div>
      <button type="submit" class="button">Submit</button>
      <div id="formMessage" class="form-message" style="display: none;"></div>
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const notifyButtons = document.querySelectorAll('.notify-me-button');
    const modal = document.getElementById('NotifyMeModal');
    const closeButton = document.querySelector('.modal-close-button');
    const modalBookTitleSpan = document.getElementById('modalBookTitle');
    const formBookTitleInput = document.getElementById('formBookTitle');
    const formBookAuthorInput = document.getElementById('formBookAuthor');
    const notifyMeForm = document.getElementById('notifyMeForm');
    const formMessage = document.getElementById('formMessage');

    // Function to open the modal
    function openModal(bookTitle, bookAuthor) {
      modalBookTitleSpan.textContent = bookTitle;
      formBookTitleInput.value = bookTitle;
      formBookAuthorInput.value = bookAuthor;
      modal.style.display = 'flex'; // Use flex for centering
      document.body.style.overflow = 'hidden'; // Prevent scrolling background
    }

    // Function to close the modal
    function closeModal() {
      modal.style.display = 'none';
      document.body.style.overflow = ''; // Restore scrolling
      notifyMeForm.reset(); // Clear form fields
      formMessage.style.display = 'none'; // Hide message
      formMessage.textContent = ''; // Clear message text
      formMessage.classList.remove('success', 'error'); // Remove status classes
    }

    // Event listeners for "Notify Me" buttons
    notifyButtons.forEach(button => {
      button.addEventListener('click', function() {
        const bookTitle = this.dataset.bookTitle;
        const bookAuthor = this.dataset.bookAuthor;
        openModal(bookTitle, bookAuthor);
      });
    });

    // Event listener for close button
    closeButton.addEventListener('click', closeModal);

    // Close modal if overlay is clicked
    modal.addEventListener('click', function(event) {
      if (event.target === modal) {
        closeModal();
      }
    });

    // Handle form submission (Crucial: Read the IMPORTANT NOTE below!)
    notifyMeForm.addEventListener('submit', function(event) {
      event.preventDefault(); // Prevent default form submission

      formMessage.style.display = 'block';
      formMessage.classList.remove('success', 'error');
      formMessage.textContent = 'Submitting...';

      // --- IMPORTANT: This is where you connect to a backend service ---
      // This example uses Shopify's built-in customer contact form endpoint.
      // Make sure your theme has a form like this configured for general contact.
      // Alternatively, use an app or an email marketing service integration.

      const formData = new FormData(notifyMeForm);
      const email = formData.get('contact_email');
      const name = formData.get('contact_name');
      const whatsapp = formData.get('contact_whatsapp');
      const bookTitle = formData.get('book_title');
      const bookAuthor = formData.get('book_author');

      // Prepare data for a generic Shopify contact form submission
      // This will send an email to your store's primary email address.
      // Subject line will include the book title.
      // You'll need to parse the email to get the details.
      const data = new URLSearchParams();
      data.append('form_type', 'contact');
      data.append('utf8', 'âœ“');
      data.append('contact[email]', email);
      data.append('contact[Name]', name);
      data.append('contact[WhatsApp Number]', whatsapp);
      data.append('contact[Book Title]', bookTitle);
      data.append('contact[Book Author]', bookAuthor);
      data.append('contact[body]', `Customer interested in upcoming book: ${bookTitle} by ${bookAuthor}. Name: ${name}, Email: ${email}, WhatsApp: ${whatsapp || 'N/A'}`);
      data.append('g-recaptcha-response', 'null'); // Placeholder for reCAPTCHA if your theme uses it, otherwise remove.

      fetch('/contact#ContactForm', { // Common endpoint for contact forms in Shopify
        method: 'POST',
        body: data,
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      })
      .then(response => {
        if (response.ok) {
          formMessage.textContent = 'Thanks! We\'ll notify you when the book is available.';
          formMessage.classList.add('success');
          // Optional: Add a delay before closing the modal
          setTimeout(closeModal, 3000);
        } else {
          formMessage.textContent = 'Something went wrong. Please try again.';
          formMessage.classList.add('error');
          // You might parse response.json() for specific error messages
        }
      })
      .catch(error => {
        console.error('Error submitting form:', error);
        formMessage.textContent = 'Network error. Please try again.';
        formMessage.classList.add('error');
      });
    });
  });
</script>